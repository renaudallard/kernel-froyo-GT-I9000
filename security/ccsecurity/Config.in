#
# Mandatory Access Control configuration
#
mainmenu_option next_comment
comment 'Security options'

[ -z "$CONFIG_CCSECURITY" ] && define_bool CONFIG_CCSECURITY y
bool 'CCSecurity support' CONFIG_CCSECURITY

if [ "$CONFIG_CCSECURITY" = "y" ]; then

  [ -z "$CONFIG_CCSECURITY_LKM" ] && define_bool CONFIG_CCSECURITY_LKM n
  bool 'Compile as loadable kernel module' CONFIG_CCSECURITY_LKM

  [ -z "$CONFIG_CCSECURITY_DISABLE_BY_DEFAULT" ] && define_bool CONFIG_CCSECURITY_DISABLE_BY_DEFAULT n
  bool 'Disable by default' CONFIG_CCSECURITY_DISABLE_BY_DEFAULT

  [ -z "$CONFIG_CCSECURITY_MAX_ACCEPT_ENTRY" ] && define_int CONFIG_CCSECURITY_MAX_ACCEPT_ENTRY 2048
  [ $CONFIG_CCSECURITY_MAX_ACCEPT_ENTRY -lt 0 ] && define_int CONFIG_CCSECURITY_MAX_ACCEPT_ENTRY 0
  int  '  Default maximal count for learning mode' CONFIG_CCSECURITY_MAX_ACCEPT_ENTRY

  string '  Default policy loader' CONFIG_CCSECURITY_DEFAULT_LOADER "/sbin/ccs-init"

  string '  Alternative activation trigger' CONFIG_CCSECURITY_ALTERNATIVE_TRIGGER "/sbin/ccs-start"

  string '  Built-in domain initializer programs' CONFIG_CCSECURITY_BUILTIN_INITIALIZERS "/sbin/modprobe /sbin/hotplug"

  [ -z "$CONFIG_CCSECURITY_AUDIT" ] && define_bool CONFIG_CCSECURITY_AUDIT y
  bool '  Auditing interface support' CONFIG_CCSECURITY_AUDIT

  if [ "$CONFIG_CCSECURITY_AUDIT" = "y" ]; then

    [ -z "$CONFIG_CCSECURITY_MAX_GRANT_LOG" ] && define_int CONFIG_CCSECURITY_MAX_GRANT_LOG 1024
    [ $CONFIG_CCSECURITY_MAX_GRANT_LOG -lt 0 ] && define_int CONFIG_CCSECURITY_MAX_GRANT_LOG 0
    int  '  Default maximal count for grant log' CONFIG_CCSECURITY_MAX_GRANT_LOG

    [ -z "$CONFIG_CCSECURITY_MAX_REJECT_LOG" ] && define_int CONFIG_CCSECURITY_MAX_REJECT_LOG 1024
    [ $CONFIG_CCSECURITY_MAX_REJECT_LOG -lt 0 ] && define_int CONFIG_CCSECURITY_MAX_REJECT_LOG 0
    int  '  Default maximal count for reject log' CONFIG_CCSECURITY_MAX_REJECT_LOG

  fi

fi

endmenu
